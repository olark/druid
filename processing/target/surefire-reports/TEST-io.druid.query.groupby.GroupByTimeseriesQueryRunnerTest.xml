<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="0.317" errors="0" skipped="0" tests="78" name="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="24.45-b08"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/hilln/druid"/>
    <property name="java.runtime.version" value="1.7.0_51-b00"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="51.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="3.2.0-55-virtual"/>
    <property name="user.home" value="/home/hilln"/>
    <property name="user.timezone" value="Etc/UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.7"/>
    <property name="user.name" value="hilln"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.7"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-7-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.7.0_51"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase time="0.053" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesGranularityNotAlignedOnSegmentBoundariesWithFilter[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithOtherMultiDimFilter[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterInOr[0]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesQueryBeyondTimeRangeOfData[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilter1[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilter2[0]"/>
  <testcase time="0.003" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithVaryingGran[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter1[0]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter2[0]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter3[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithTimeZone[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterAndMultiDimAndOr[0]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseries[0]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseriesWithFilter[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilterAndOr1[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilterAndOr2[0]"/>
  <testcase time="0.004" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithVaryingGranWithFilter[0]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseries[0]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiDimFilter[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithOrFilter[0]"/>
  <testcase time="0.017" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseriesMaxMin[0]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterAndMultiDim[0]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilterOnNonExistentDimension[0]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilter[0]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiDimFilterAndOr[0]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithRegexFilter[0]"/>
  <testcase time="0.007" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesGranularityNotAlignedOnSegmentBoundariesWithFilter[1]"/>
  <testcase time="0.004" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithOtherMultiDimFilter[1]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterInOr[1]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesQueryBeyondTimeRangeOfData[1]"/>
  <testcase time="0.004" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilter1[1]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilter2[1]"/>
  <testcase time="0.003" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithVaryingGran[1]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter1[1]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter2[1]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter3[1]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithTimeZone[1]"/>
  <testcase time="0.006" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterAndMultiDimAndOr[1]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseries[1]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseriesWithFilter[1]"/>
  <testcase time="0.007" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilterAndOr1[1]"/>
  <testcase time="0.018" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilterAndOr2[1]"/>
  <testcase time="0.021" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithVaryingGranWithFilter[1]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseries[1]"/>
  <testcase time="0.004" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiDimFilter[1]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithOrFilter[1]"/>
  <testcase time="0.015" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseriesMaxMin[1]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterAndMultiDim[1]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilterOnNonExistentDimension[1]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilter[1]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiDimFilterAndOr[1]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithRegexFilter[1]"/>
  <testcase time="0.015" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesGranularityNotAlignedOnSegmentBoundariesWithFilter[2]"/>
  <testcase time="0.003" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithOtherMultiDimFilter[2]"/>
  <testcase time="0.004" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterInOr[2]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesQueryBeyondTimeRangeOfData[2]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilter1[2]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilter2[2]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithVaryingGran[2]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter1[2]"/>
  <testcase time="0.001" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter2[2]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilter3[2]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithTimeZone[2]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterAndMultiDimAndOr[2]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseries[2]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseriesWithFilter[2]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilterAndOr1[2]"/>
  <testcase time="0.008" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiValueDimFilterAndOr2[2]"/>
  <testcase time="0.007" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithVaryingGranWithFilter[2]"/>
  <testcase time="0.002" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseries[2]"/>
  <testcase time="0.003" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiDimFilter[2]"/>
  <testcase time="0.004" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithOrFilter[2]"/>
  <testcase time="0.007" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testFullOnTimeseriesMaxMin[2]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilterAndMultiDim[2]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithFilterOnNonExistentDimension[2]"/>
  <testcase time="0" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithNonExistentFilter[2]"/>
  <testcase time="0.005" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithMultiDimFilterAndOr[2]"/>
  <testcase time="0.003" classname="io.druid.query.groupby.GroupByTimeseriesQueryRunnerTest" name="testTimeseriesWithRegexFilter[2]"/>
</testsuite>